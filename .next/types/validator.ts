// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
}


// Validate ../../app/admin/anecdotes/page.tsx
{
  const handler = {} as typeof import("../../app/admin/anecdotes/page.js")
  handler satisfies AppPageConfig<"/admin/anecdotes">
}

// Validate ../../app/admin/games/page.tsx
{
  const handler = {} as typeof import("../../app/admin/games/page.js")
  handler satisfies AppPageConfig<"/admin/games">
}

// Validate ../../app/admin/login/page.tsx
{
  const handler = {} as typeof import("../../app/admin/login/page.js")
  handler satisfies AppPageConfig<"/admin/login">
}

// Validate ../../app/admin/members/page.tsx
{
  const handler = {} as typeof import("../../app/admin/members/page.js")
  handler satisfies AppPageConfig<"/admin/members">
}

// Validate ../../app/admin/olivia/page.tsx
{
  const handler = {} as typeof import("../../app/admin/olivia/page.js")
  handler satisfies AppPageConfig<"/admin/olivia">
}

// Validate ../../app/admin/page.tsx
{
  const handler = {} as typeof import("../../app/admin/page.js")
  handler satisfies AppPageConfig<"/admin">
}

// Validate ../../app/admin/scores/page.tsx
{
  const handler = {} as typeof import("../../app/admin/scores/page.js")
  handler satisfies AppPageConfig<"/admin/scores">
}

// Validate ../../app/page.tsx
{
  const handler = {} as typeof import("../../app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../app/api/admin/anecdotes/[id]/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/anecdotes/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/anecdotes/[id]">
}

// Validate ../../app/api/admin/anecdotes/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/anecdotes/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/anecdotes">
}

// Validate ../../app/api/admin/games/[id]/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/games/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/games/[id]">
}

// Validate ../../app/api/admin/games/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/games/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/games">
}

// Validate ../../app/api/admin/members/[id]/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/members/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/members/[id]">
}

// Validate ../../app/api/admin/members/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/members/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/members">
}

// Validate ../../app/api/admin/olivia-quotes/[index]/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/olivia-quotes/[index]/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/olivia-quotes/[index]">
}

// Validate ../../app/api/admin/olivia-quotes/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/olivia-quotes/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/olivia-quotes">
}

// Validate ../../app/api/admin/scores/[index]/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/scores/[index]/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/scores/[index]">
}

// Validate ../../app/api/admin/scores/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/scores/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/scores">
}

// Validate ../../app/api/admin/stats/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/stats/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/stats">
}

// Validate ../../app/api/anecdotes/route.ts
{
  const handler = {} as typeof import("../../app/api/anecdotes/route.js")
  handler satisfies RouteHandlerConfig<"/api/anecdotes">
}

// Validate ../../app/api/auth/login/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/login/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/login">
}

// Validate ../../app/api/auth/logout/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/logout/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/logout">
}

// Validate ../../app/api/auth/session/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/session/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/session">
}

// Validate ../../app/api/auth/test-login/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/test-login/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/test-login">
}

// Validate ../../app/api/games/route.ts
{
  const handler = {} as typeof import("../../app/api/games/route.js")
  handler satisfies RouteHandlerConfig<"/api/games">
}

// Validate ../../app/api/members/route.ts
{
  const handler = {} as typeof import("../../app/api/members/route.js")
  handler satisfies RouteHandlerConfig<"/api/members">
}

// Validate ../../app/api/olivia-quotes/route.ts
{
  const handler = {} as typeof import("../../app/api/olivia-quotes/route.js")
  handler satisfies RouteHandlerConfig<"/api/olivia-quotes">
}

// Validate ../../app/api/scores/route.ts
{
  const handler = {} as typeof import("../../app/api/scores/route.js")
  handler satisfies RouteHandlerConfig<"/api/scores">
}





// Validate ../../app/admin/layout.tsx
{
  const handler = {} as typeof import("../../app/admin/layout.js")
  handler satisfies LayoutConfig<"/admin">
}

// Validate ../../app/layout.tsx
{
  const handler = {} as typeof import("../../app/layout.js")
  handler satisfies LayoutConfig<"/">
}
